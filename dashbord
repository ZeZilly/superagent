// The exported code uses Tailwind CSS. Install Tailwind CSS in your dev environment to ensure all styles work.
import React, { useState, useEffect, useRef } from 'react';
import { Button } from "@/components/ui/button";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Swiper, SwiperSlide } from 'swiper/react';
import { Pagination, Autoplay } from 'swiper/modules';
import * as echarts from 'echarts';
const App: React.FC = () => {
const [activeTab, setActiveTab] = useState('overview');
const [showProfileMenu, setShowProfileMenu] = useState(false);
const profileMenuRef = useRef<HTMLDivElement>(null);
const [selectedAPI, setSelectedAPI] = useState('openai');
const [apiKey, setApiKey] = useState('');
const [prompt, setPrompt] = useState('');
const [response, setResponse] = useState('');
const [isProcessing, setIsProcessing] = useState(false);
const [showCodeEditor, setShowCodeEditor] = useState(false);
const [showAIAssistant, setShowAIAssistant] = useState(false);
const [codeContent, setCodeContent] = useState(`// Example code
import React from 'react';
const HelloWorld = () => {
return (
<div>
<h1>Hello, World!</h1>
<p>Welcome to Databutton-AI code editor</p>
</div>
);
};
export default HelloWorld;`);
const [selectedLanguage, setSelectedLanguage] = useState('javascript');
const [selectedFile, setSelectedFile] = useState('HelloWorld.jsx');
const chartRef = useRef<HTMLDivElement>(null);
const [showNotifications, setShowNotifications] = useState(false);
const [aiAssistantMessage, setAiAssistantMessage] = useState('');
const [aiAssistantConversation, setAiAssistantConversation] = useState<{role: string, content: string}[]>([
{role: 'assistant', content: 'Hello! I\'m your AI assistant. How can I help you today?'}
]);
const [aiAssistantIsTyping, setAiAssistantIsTyping] = useState(false);
const conversationEndRef = useRef<HTMLDivElement>(null);
const [apiModels, setApiModels] = useState({
openai: ['gpt-3.5-turbo', 'gpt-4', 'gpt-4-turbo'],
anthropic: ['claude-instant-1', 'claude-2', 'claude-3-opus'],
mistral: ['mistral-tiny', 'mistral-small', 'mistral-medium', 'mistral-large'],
llama: ['llama-2-7b', 'llama-2-13b', 'llama-2-70b', 'llama-3']
});
const [selectedModel, setSelectedModel] = useState(apiModels.openai[0]);
const projectFiles = [
{ name: 'HelloWorld.jsx', language: 'javascript' },
{ name: 'styles.css', language: 'css' },
{ name: 'data.json', language: 'json' },
{ name: 'index.html', language: 'html' },
{ name: 'config.ts', language: 'typescript' }
];
useEffect(() => {
const handleClickOutside = (event: MouseEvent) => {
if (profileMenuRef.current && !profileMenuRef.current.contains(event.target as Node)) {
setShowProfileMenu(false);
}
};
document.addEventListener('mousedown', handleClickOutside);
return () => {
document.removeEventListener('mousedown', handleClickOutside);
};
}, []);
useEffect(() => {
if (chartRef.current && activeTab === 'overview') {
const chart = echarts.init(chartRef.current);
const option = {
animation: false,
tooltip: {
trigger: 'axis',
axisPointer: {
type: 'shadow'
}
},
grid: {
left: '3%',
right: '4%',
bottom: '3%',
containLabel: true
},
xAxis: [
{
type: 'category',
data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],
axisTick: {
alignWithLabel: true
},
axisLine: {
lineStyle: {
color: '#555'
}
},
axisLabel: {
color: '#aaa'
}
}
],
yAxis: [
{
type: 'value',
axisLine: {
lineStyle: {
color: '#555'
}
},
axisLabel: {
color: '#aaa'
},
splitLine: {
lineStyle: {
color: '#333'
}
}
}
],
series: [
{
name: 'API Calls',
type: 'bar',
barWidth: '60%',
data: [10, 52, 78, 123, 181, 224, 290],
itemStyle: {
color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
{ offset: 0, color: '#3b82f6' },
{ offset: 1, color: '#1d4ed8' }
])
}
}
]
};
chart.setOption(option);
const handleResize = () => {
chart.resize();
};
window.addEventListener('resize', handleResize);
return () => {
chart.dispose();
window.removeEventListener('resize', handleResize);
};
}
}, [activeTab]);
useEffect(() => {
if (conversationEndRef.current) {
conversationEndRef.current.scrollIntoView({ behavior: 'smooth' });
}
}, [aiAssistantConversation]);
const handleModelChange = (api: string) => {
setSelectedAPI(api);
setSelectedModel(apiModels[api as keyof typeof apiModels][0]);
};
const handleFileSelect = (fileName: string) => {
setSelectedFile(fileName);
const file = projectFiles.find(f => f.name === fileName);
if (file) {
setSelectedLanguage(file.language);
// Simulate different file contents
if (fileName === 'HelloWorld.jsx') {
setCodeContent(`// Example React component
import React from 'react';
const HelloWorld = () => {
return (
<div>
<h1>Hello, World!</h1>
<p>Welcome to Databutton-AI code editor</p>
</div>
);
};
export default HelloWorld;`);
} else if (fileName === 'styles.css') {
setCodeContent(`/* Main styles */
body {
font-family: 'Inter', sans-serif;
background-color: #121212;
color: #ffffff;
}
.container {
max-width: 1200px;
margin: 0 auto;
padding: 2rem;
}
.header {
display: flex;
justify-content: space-between;
align-items: center;
margin-bottom: 2rem;
}`);
} else if (fileName === 'data.json') {
setCodeContent(`{
"project": "Databutton-AI",
"version": "1.0.0",
"description": "Advanced AI interface for developers",
"features": [
"Text generation",
"Language translation",
"Code assistance",
"Data analysis"
],
"settings": {
"theme": "dark",
"language": "en",
"autoSave": true
}
}`);
} else if (fileName === 'index.html') {
setCodeContent(`<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Databutton-AI</title>
<link rel="stylesheet" href="styles.css">
</head>
<body>
<div id="root"></div>
<script src="bundle.js"></script>
</body>
</html>`);
} else if (fileName === 'config.ts') {
setCodeContent(`// Configuration for Databutton-AI
interface Config {
apiEndpoint: string;
defaultModel: string;
maxTokens: number;
temperature: number;
}
const config: Config = {
apiEndpoint: 'https://api.databutton.ai/v1',
defaultModel: 'gpt-3.5-turbo',
maxTokens: 2048,
temperature: 0.7
};
export default config;`);
}
}
};
const handleAIAssistantSend = () => {
if (!aiAssistantMessage.trim()) return;
// Add user message to conversation
const newConversation = [
...aiAssistantConversation,
{ role: 'user', content: aiAssistantMessage }
];
setAiAssistantConversation(newConversation);
setAiAssistantMessage('');
// Simulate AI typing
setAiAssistantIsTyping(true);
// Simulate AI response after a delay
setTimeout(() => {
let aiResponse = '';
// Generate different responses based on the message content
const userMessage = aiAssistantMessage.toLowerCase();
if (userMessage.includes('hello') || userMessage.includes('hi')) {
aiResponse = "Hello! How can I assist you with your project today?";
} else if (userMessage.includes('code') || userMessage.includes('function')) {
aiResponse = "Here's a sample function that might help:\n\n```javascript\nfunction processData(data) {\n  return data.map(item => ({\n    id: item.id,\n    value: item.value * 2,\n    status: item.value > 50 ? 'high' : 'low'\n  }));\n}\n```\n\nYou can modify this according to your specific requirements.";
} else if (userMessage.includes('api') || userMessage.includes('endpoint')) {
aiResponse = "To connect to the API, you'll need to:\n\n1. Get your API key from the settings page\n2. Use the fetch API or axios to make requests\n3. Handle the response appropriately\n\nHere's a basic example:\n\n```javascript\nasync function fetchData() {\n  const response = await fetch('https://api.databutton.ai/v1/data', {\n    headers: {\n      'Authorization': `Bearer ${apiKey}`\n    }\n  });\n  return await response.json();\n}\n```";
} else if (userMessage.includes('database') || userMessage.includes('sql')) {
aiResponse = "For database operations, you can use the built-in SQL editor or the Table Editor. Here's a sample SQL query to get you started:\n\n```sql\nSELECT u.name, COUNT(t.id) as task_count\nFROM users u\nLEFT JOIN tasks t ON u.id = t.user_id\nGROUP BY u.name\nORDER BY task_count DESC;\n```";
} else if (userMessage.includes('help') || userMessage.includes('documentation')) {
aiResponse = "You can find comprehensive documentation at https://docs.databutton.ai. The documentation covers all aspects of the platform including:\n\n- Getting started guide\n- API reference\n- Database management\n- Deployment options\n- Troubleshooting\n\nIs there a specific area you need help with?";
} else {
aiResponse = "I understand you're asking about " + aiAssistantMessage.substring(0, 20) + "... I can help with that. Could you provide more details about what you're trying to achieve?";
}
setAiAssistantConversation([...newConversation, { role: 'assistant', content: aiResponse }]);
setAiAssistantIsTyping(false);
}, 1500);
};
return (
<div className="min-h-screen bg-[#0f0f13] text-white">
{/* Header */}
<header className="border-b border-gray-800 bg-[#161620]">
<div className="flex items-center justify-between px-6 h-16">
<div className="flex items-center space-x-6">
<div className="flex items-center space-x-2">
<div className="h-8 w-8 rounded-md bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center">
<i className="fas fa-bolt text-white"></i>
</div>
<span className="text-lg font-semibold tracking-tight">Databutton</span>
</div>
<div className="hidden md:flex items-center space-x-1">
<Button variant="ghost" size="sm" className="text-gray-300 hover:text-white hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
Dashboard
</Button>
<Button variant="ghost" size="sm" className="text-gray-300 hover:text-white hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
Projects
</Button>
<Button variant="ghost" size="sm" className="text-gray-300 hover:text-white hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
Analytics
</Button>
<Button variant="ghost" size="sm" className="text-gray-300 hover:text-white hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
Documentation
</Button>
</div>
</div>
<div className="flex items-center space-x-4">
<div className="relative">
<Button
variant="ghost"
size="icon"
className="text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer"
onClick={() => setShowNotifications(!showNotifications)}
>
<i className="fas fa-bell"></i>
</Button>
<div className="absolute top-0 right-0 h-2 w-2 rounded-full bg-blue-500"></div>
{showNotifications && (
<div className="absolute right-0 mt-2 w-80 rounded-md shadow-lg bg-[#1a1a25] border border-gray-700 z-50">
<div className="p-3 border-b border-gray-700">
<div className="flex justify-between items-center">
<h3 className="text-sm font-medium">Notifications</h3>
<Button variant="ghost" size="sm" className="text-xs text-blue-400 hover:text-blue-300 !rounded-button whitespace-nowrap cursor-pointer">
Mark all as read
</Button>
</div>
</div>
<div className="max-h-[320px] overflow-y-auto">
<div className="p-3 hover:bg-[#252530] border-b border-gray-700 cursor-pointer">
<div className="flex items-start">
<div className="h-8 w-8 rounded-full bg-blue-500/20 flex items-center justify-center mr-3 mt-0.5">
<i className="fas fa-code-branch text-blue-400 text-sm"></i>
</div>
<div>
<p className="text-sm text-gray-200">New pull request from <span className="font-medium">Alex</span></p>
<p className="text-xs text-gray-400 mt-1">Added new features to the dashboard</p>
<p className="text-xs text-gray-500 mt-2">2 minutes ago</p>
</div>
</div>
</div>
<div className="p-3 hover:bg-[#252530] border-b border-gray-700 cursor-pointer">
<div className="flex items-start">
<div className="h-8 w-8 rounded-full bg-green-500/20 flex items-center justify-center mr-3 mt-0.5">
<i className="fas fa-check text-green-400 text-sm"></i>
</div>
<div>
<p className="text-sm text-gray-200">Build completed successfully</p>
<p className="text-xs text-gray-400 mt-1">Project deployed to production</p>
<p className="text-xs text-gray-500 mt-2">15 minutes ago</p>
</div>
</div>
</div>
<div className="p-3 hover:bg-[#252530] border-b border-gray-700 cursor-pointer">
<div className="flex items-start">
<div className="h-8 w-8 rounded-full bg-purple-500/20 flex items-center justify-center mr-3 mt-0.5">
<i className="fas fa-user-plus text-purple-400 text-sm"></i>
</div>
<div>
<p className="text-sm text-gray-200"><span className="font-medium">Sarah</span> joined the team</p>
<p className="text-xs text-gray-400 mt-1">Added as Developer</p>
<p className="text-xs text-gray-500 mt-2">1 hour ago</p>
</div>
</div>
</div>
<div className="p-3 hover:bg-[#252530] cursor-pointer">
<div className="flex items-start">
<div className="h-8 w-8 rounded-full bg-yellow-500/20 flex items-center justify-center mr-3 mt-0.5">
<i className="fas fa-exclamation-triangle text-yellow-400 text-sm"></i>
</div>
<div>
<p className="text-sm text-gray-200">API usage approaching limit</p>
<p className="text-xs text-gray-400 mt-1">85% of monthly quota used</p>
<p className="text-xs text-gray-500 mt-2">3 hours ago</p>
</div>
</div>
</div>
</div>
<div className="p-2 border-t border-gray-700">
<Button variant="ghost" size="sm" className="w-full text-center text-sm text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
View all notifications
</Button>
</div>
</div>
)}
</div>
<div className="h-6 w-px bg-gray-700"></div>
<div className="relative">
<div
className="flex items-center space-x-2 cursor-pointer"
onClick={() => setShowProfileMenu(!showProfileMenu)}
>
<Avatar className="h-8 w-8 border border-gray-700">
<AvatarImage src="https://public.readdy.ai/ai/img_res/8a358fd5b1394f123d027802bdd7d682.jpg" />
<AvatarFallback>JD</AvatarFallback>
</Avatar>
<div className="hidden md:block">
<p className="text-sm font-medium">John Doe</p>
<p className="text-xs text-gray-400">Admin</p>
</div>
<i className="fas fa-chevron-down text-xs text-gray-400"></i>
</div>
{showProfileMenu && (
<div ref={profileMenuRef} className="absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-[#1a1a25] border border-gray-700 z-50">
<div className="p-2">
<div className="px-3 py-2 text-sm text-gray-400">
Signed in as <span className="font-medium text-white">john.doe@example.com</span>
</div>
<div className="border-t border-gray-700 my-1"></div>
<button className="w-full text-left px-3 py-2 text-sm text-gray-300 hover:bg-[#252530] rounded-md flex items-center cursor-pointer" role="menuitem">
<i className="fas fa-user mr-2 w-4 text-gray-400"></i>
Your Profile
</button>
<button className="w-full text-left px-3 py-2 text-sm text-gray-300 hover:bg-[#252530] rounded-md flex items-center cursor-pointer" role="menuitem">
<i className="fas fa-cog mr-2 w-4 text-gray-400"></i>
Settings
</button>
<button className="w-full text-left px-3 py-2 text-sm text-gray-300 hover:bg-[#252530] rounded-md flex items-center cursor-pointer" role="menuitem">
<i className="fas fa-moon mr-2 w-4 text-gray-400"></i>
Appearance
</button>
<div className="border-t border-gray-700 my-1"></div>
<button className="w-full text-left px-3 py-2 text-sm text-gray-300 hover:bg-[#252530] rounded-md flex items-center cursor-pointer" role="menuitem">
<i className="fas fa-question-circle mr-2 w-4 text-gray-400"></i>
Help & Support
</button>
<button className="w-full text-left px-3 py-2 text-sm text-gray-300 hover:bg-[#252530] rounded-md flex items-center cursor-pointer" role="menuitem">
<i className="fas fa-comment-alt mr-2 w-4 text-gray-400"></i>
Send Feedback
</button>
<div className="border-t border-gray-700 my-1"></div>
<button className="w-full text-left px-3 py-2 text-sm text-red-400 hover:bg-[#252530] rounded-md flex items-center cursor-pointer" role="menuitem">
<i className="fas fa-sign-out-alt mr-2 w-4"></i>
Sign Out
</button>
</div>
</div>
)}
</div>
</div>
</div>
</header>
{/* Main Content */}
<div className="flex h-[calc(100vh-64px)]">
{/* Sidebar */}
<div className="w-16 bg-[#13131b] border-r border-gray-800 flex flex-col items-center py-6">
<Button variant="ghost" size="icon" className="text-white mb-6 hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-home"></i>
</Button>
<a href="https://readdy.ai/home/d06afc50-29d6-42d6-a954-e6f8a0b7deb1/485aab5d-7ba0-41c7-9377-02669eb6fc64" data-readdy="true">
<Button variant="ghost" size="icon" className="text-gray-500 mb-4 hover:bg-[#252530] hover:text-white !rounded-button cursor-pointer">
<i className="fas fa-chart-bar"></i>
</Button>
</a>
<Button
variant="ghost"
size="icon"
className="text-gray-500 mb-4 hover:bg-[#252530] hover:text-white !rounded-button cursor-pointer"
onClick={() => setShowAIAssistant(!showAIAssistant)}
>
<i className="fas fa-robot"></i>
</Button>
<Button variant="ghost" size="icon" className="text-gray-500 mb-4 hover:bg-[#252530] hover:text-white !rounded-button cursor-pointer">
<i className="fas fa-database"></i>
</Button>
<Button variant="ghost" size="icon" className="text-gray-500 mb-4 hover:bg-[#252530] hover:text-white !rounded-button cursor-pointer">
<i className="fas fa-layer-group"></i>
</Button>
<Button
variant="ghost"
size="icon"
className="text-gray-500 mb-4 hover:bg-[#252530] hover:text-white !rounded-button cursor-pointer"
onClick={() => setShowCodeEditor(!showCodeEditor)}
>
<i className="fas fa-code"></i>
</Button>
<div className="flex-grow"></div>
<Button variant="ghost" size="icon" className="text-gray-500 mb-4 hover:bg-[#252530] hover:text-white !rounded-button cursor-pointer">
<i className="fas fa-cog"></i>
</Button>
<Button variant="ghost" size="icon" className="text-gray-500 hover:bg-[#252530] hover:text-white !rounded-button cursor-pointer">
<i className="fas fa-question-circle"></i>
</Button>
</div>
{/* Content */}
<div className="flex-1 overflow-auto bg-[#0f0f13] relative">
{/* AI Assistant Panel */}
{showAIAssistant && (
<div className="absolute inset-0 z-50 bg-[#0f0f13] overflow-hidden flex flex-col">
<div className="flex justify-between items-center p-4 border-b border-gray-800 bg-[#161620]">
<div className="flex items-center">
<div className="h-8 w-8 rounded-full bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center mr-3">
<i className="fas fa-robot text-white"></i>
</div>
<h2 className="text-lg font-medium">AI Assistant</h2>
</div>
<Button
variant="ghost"
size="icon"
className="text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer"
onClick={() => setShowAIAssistant(false)}
>
<i className="fas fa-times"></i>
</Button>
</div>
<div className="flex flex-1 overflow-hidden">
{/* Sidebar */}
<div className="w-64 bg-[#13131b] border-r border-gray-800 overflow-y-auto">
<div className="p-4">
<div className="flex justify-between items-center mb-4">
<h3 className="text-xs font-medium text-gray-400 uppercase tracking-wider">AI Models</h3>
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-cog text-xs"></i>
</Button>
</div>
<div className="mb-4">
<Select value={selectedAPI} onValueChange={handleModelChange}>
<SelectTrigger className="w-full bg-[#1a1a25] border-gray-700">
<SelectValue placeholder="Select API provider" />
</SelectTrigger>
<SelectContent className="bg-[#1a1a25] border-gray-700">
<SelectItem value="openai">OpenAI</SelectItem>
<SelectItem value="anthropic">Anthropic</SelectItem>
<SelectItem value="mistral">Mistral AI</SelectItem>
<SelectItem value="llama">Meta AI (Llama)</SelectItem>
</SelectContent>
</Select>
</div>
<div className="mb-6">
<Select value={selectedModel} onValueChange={setSelectedModel}>
<SelectTrigger className="w-full bg-[#1a1a25] border-gray-700">
<SelectValue placeholder="Select model" />
</SelectTrigger>
<SelectContent className="bg-[#1a1a25] border-gray-700">
{apiModels[selectedAPI as keyof typeof apiModels].map((model) => (
<SelectItem key={model} value={model}>{model}</SelectItem>
))}
</SelectContent>
</Select>
</div>
<div className="flex justify-between items-center mb-4">
<h3 className="text-xs font-medium text-gray-400 uppercase tracking-wider">Conversations</h3>
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-plus text-xs"></i>
</Button>
</div>
<div className="space-y-2">
<div className="flex items-center p-2 rounded-md bg-[#252530] text-white cursor-pointer">
<i className="fas fa-comment-alt mr-2 text-blue-400"></i>
<span className="text-sm">Current Conversation</span>
</div>
<div className="flex items-center p-2 rounded-md text-gray-300 hover:bg-[#1a1a25] cursor-pointer">
<i className="fas fa-comment-alt mr-2 text-gray-400"></i>
<span className="text-sm">Code Generation</span>
</div>
<div className="flex items-center p-2 rounded-md text-gray-300 hover:bg-[#1a1a25] cursor-pointer">
<i className="fas fa-comment-alt mr-2 text-gray-400"></i>
<span className="text-sm">API Integration Help</span>
</div>
<div className="flex items-center p-2 rounded-md text-gray-300 hover:bg-[#1a1a25] cursor-pointer">
<i className="fas fa-comment-alt mr-2 text-gray-400"></i>
<span className="text-sm">Database Query</span>
</div>
</div>
<div className="mt-6 pt-6 border-t border-gray-800">
<h3 className="text-xs font-medium text-gray-400 uppercase tracking-wider mb-4">Capabilities</h3>
<div className="space-y-3">
<div className="flex items-center p-2 rounded-md bg-[#1a1a25] hover:bg-[#252530] cursor-pointer">
<div className="w-8 h-8 rounded-md bg-blue-500/20 flex items-center justify-center mr-2">
<i className="fas fa-code text-blue-400 text-sm"></i>
</div>
<span className="text-sm text-gray-300">Code Generation</span>
</div>
<div className="flex items-center p-2 rounded-md bg-[#1a1a25] hover:bg-[#252530] cursor-pointer">
<div className="w-8 h-8 rounded-md bg-green-500/20 flex items-center justify-center mr-2">
<i className="fas fa-language text-green-400 text-sm"></i>
</div>
<span className="text-sm text-gray-300">Text Translation</span>
</div>
<div className="flex items-center p-2 rounded-md bg-[#1a1a25] hover:bg-[#252530] cursor-pointer">
<div className="w-8 h-8 rounded-md bg-purple-500/20 flex items-center justify-center mr-2">
<i className="fas fa-chart-pie text-purple-400 text-sm"></i>
</div>
<span className="text-sm text-gray-300">Data Analysis</span>
</div>
<div className="flex items-center p-2 rounded-md bg-[#1a1a25] hover:bg-[#252530] cursor-pointer">
<div className="w-8 h-8 rounded-md bg-orange-500/20 flex items-center justify-center mr-2">
<i className="fas fa-database text-orange-400 text-sm"></i>
</div>
<span className="text-sm text-gray-300">SQL Generation</span>
</div>
</div>
</div>
</div>
</div>
{/* Chat Area */}
<div className="flex-1 flex flex-col">
<div className="flex-1 overflow-auto p-6">
<div className="max-w-3xl mx-auto">
{aiAssistantConversation.map((message, index) => (
<div key={index} className={`flex mb-6 ${message.role === 'assistant' ? 'justify-start' : 'justify-end'}`}>
{message.role === 'assistant' && (
<div className="h-8 w-8 rounded-full bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center mr-3 mt-0.5">
<i className="fas fa-robot text-white text-sm"></i>
</div>
)}
<div className={`max-w-[80%] rounded-lg p-4 ${message.role === 'assistant' ? 'bg-[#1a1a25] border border-gray-800' : 'bg-blue-600'}`}>
<div className="whitespace-pre-wrap text-sm">
{message.content.split('```').map((part, i) => {
if (i % 2 === 0) {
return <span key={i}>{part}</span>;
} else {
const codeLines = part.split('\n');
const language = codeLines[0] || '';
const code = codeLines.slice(1).join('\n');
return (
<div key={i} className="my-2 bg-[#13131b] rounded-md overflow-hidden">
<div className="bg-[#252530] px-3 py-1 text-xs text-gray-400 border-b border-gray-700">
{language}
</div>
<pre className="p-3 text-xs overflow-x-auto">
<code>{code}</code>
</pre>
</div>
);
}
})}
</div>
</div>
{message.role === 'user' && (
<div className="h-8 w-8 rounded-full bg-[#252530] border border-gray-700 flex items-center justify-center ml-3 mt-0.5">
<i className="fas fa-user text-gray-400 text-sm"></i>
</div>
)}
</div>
))}
{aiAssistantIsTyping && (
<div className="flex mb-6 justify-start">
<div className="h-8 w-8 rounded-full bg-gradient-to-br from-blue-500 to-indigo-600 flex items-center justify-center mr-3 mt-0.5">
<i className="fas fa-robot text-white text-sm"></i>
</div>
<div className="max-w-[80%] rounded-lg p-4 bg-[#1a1a25] border border-gray-800">
<div className="flex space-x-1">
<div className="h-2 w-2 rounded-full bg-gray-400 animate-bounce"></div>
<div className="h-2 w-2 rounded-full bg-gray-400 animate-bounce" style={{ animationDelay: '0.2s' }}></div>
<div className="h-2 w-2 rounded-full bg-gray-400 animate-bounce" style={{ animationDelay: '0.4s' }}></div>
</div>
</div>
</div>
)}
<div ref={conversationEndRef}></div>
</div>
</div>
<div className="p-4 border-t border-gray-800 bg-[#161620]">
<div className="max-w-3xl mx-auto">
<div className="relative">
<Textarea
placeholder="Ask me anything..."
className="min-h-[80px] pr-12 bg-[#1a1a25] border-gray-700 resize-none"
value={aiAssistantMessage}
onChange={(e) => setAiAssistantMessage(e.target.value)}
onKeyDown={(e) => {
if (e.key === 'Enter' && !e.shiftKey) {
e.preventDefault();
handleAIAssistantSend();
}
}}
/>
<Button
className="absolute right-2 bottom-2 bg-blue-600 hover:bg-blue-700 text-white h-8 w-8 p-0 !rounded-button whitespace-nowrap cursor-pointer"
onClick={handleAIAssistantSend}
disabled={!aiAssistantMessage.trim() || aiAssistantIsTyping}
>
<i className="fas fa-paper-plane"></i>
</Button>
</div>
<div className="flex justify-between items-center mt-2 text-xs text-gray-400">
<div>
<span>Model: </span>
<span className="text-blue-400">{selectedModel}</span>
</div>
<div className="flex items-center space-x-4">
<button className="flex items-center hover:text-white cursor-pointer">
<i className="fas fa-microphone mr-1"></i>
<span>Voice</span>
</button>
<button className="flex items-center hover:text-white cursor-pointer">
<i className="fas fa-upload mr-1"></i>
<span>Upload</span>
</button>
<button className="flex items-center hover:text-white cursor-pointer">
<i className="fas fa-cog mr-1"></i>
<span>Settings</span>
</button>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
)}
{/* Code Editor Panel */}
{showCodeEditor && (
<div className="absolute inset-0 z-50 bg-[#0f0f13] overflow-hidden flex flex-col">
<div className="flex justify-between items-center p-4 border-b border-gray-800 bg-[#161620]">
<div className="flex items-center">
<i className="fas fa-code text-blue-400 mr-2"></i>
<h2 className="text-lg font-medium">Code Editor</h2>
</div>
<Button
variant="ghost"
size="icon"
className="text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer"
onClick={() => setShowCodeEditor(false)}
>
<i className="fas fa-times"></i>
</Button>
</div>
<div className="flex flex-1 overflow-hidden">
{/* File Explorer */}
<div className="w-64 bg-[#13131b] border-r border-gray-800 overflow-y-auto">
<div className="p-4">
<div className="flex justify-between items-center mb-4">
<h3 className="text-xs font-medium text-gray-400 uppercase tracking-wider">Explorer</h3>
<div className="flex space-x-1">
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-plus text-xs"></i>
</Button>
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-folder-plus text-xs"></i>
</Button>
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-ellipsis-h text-xs"></i>
</Button>
</div>
</div>
<div className="mb-4">
<div className="flex items-center text-xs text-gray-400 mb-2">
<i className="fas fa-chevron-down mr-1"></i>
<span className="font-medium">PROJECT FILES</span>
</div>
<div className="space-y-1 pl-2">
{projectFiles.map((file) => (
<div
key={file.name}
className={`flex items-center p-2 rounded-md cursor-pointer ${selectedFile === file.name ? 'bg-[#252530] text-white' : 'text-gray-300 hover:bg-[#1a1a25]'}`}
onClick={() => handleFileSelect(file.name)}
>
<i className={`fas fa-${file.language === 'javascript' || file.language === 'typescript' ? 'js' : file.language === 'html' ? 'html5' : file.language === 'css' ? 'css3-alt' : 'file-code'} mr-2 text-${file.language === 'javascript' ? 'yellow' : file.language === 'html' ? 'orange' : file.language === 'css' ? 'blue' : file.language === 'typescript' ? 'blue' : 'gray'}-400 text-sm`}></i>
<span className="text-sm">{file.name}</span>
</div>
))}
</div>
</div>
<div>
<div className="flex items-center text-xs text-gray-400 mb-2">
<i className="fas fa-chevron-down mr-1"></i>
<span className="font-medium">DEPENDENCIES</span>
</div>
<div className="space-y-1 pl-2">
<div className="flex items-center p-2 rounded-md text-gray-300 hover:bg-[#1a1a25] cursor-pointer">
<i className="fas fa-cube mr-2 text-purple-400 text-sm"></i>
<span className="text-sm">package.json</span>
</div>
<div className="flex items-center p-2 rounded-md text-gray-300 hover:bg-[#1a1a25] cursor-pointer">
<i className="fas fa-lock mr-2 text-red-400 text-sm"></i>
<span className="text-sm">package-lock.json</span>
</div>
</div>
</div>
</div>
</div>
{/* Editor */}
<div className="flex-1 flex flex-col">
<div className="bg-[#13131b] border-b border-gray-800 p-1 flex items-center">
<div className="flex space-x-1 overflow-x-auto">
{projectFiles.map((file) => (
<div
key={file.name}
className={`flex items-center px-3 py-1.5 rounded-t-md cursor-pointer ${selectedFile === file.name ? 'bg-[#1e1e2d] text-white' : 'bg-[#13131b] text-gray-400 hover:bg-[#1a1a25]'}`}
onClick={() => handleFileSelect(file.name)}
>
<i className={`fas fa-${file.language === 'javascript' || file.language === 'typescript' ? 'js' : file.language === 'html' ? 'html5' : file.language === 'css' ? 'css3-alt' : 'file-code'} mr-2 text-${file.language === 'javascript' ? 'yellow' : file.language === 'html' ? 'orange' : file.language === 'css' ? 'blue' : file.language === 'typescript' ? 'blue' : 'gray'}-400 text-xs`}></i>
<span className="text-sm">{file.name}</span>
{selectedFile === file.name && (
<Button variant="ghost" size="icon" className="h-5 w-5 ml-2 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-times text-xs"></i>
</Button>
)}
</div>
))}
</div>
</div>
<div className="flex-1 bg-[#1e1e2d] overflow-auto">
<div className="flex">
<div className="bg-[#161620] p-4 text-right">
{codeContent.split('\n').map((_, index) => (
<div key={index} className="text-gray-500 text-sm font-mono select-none">
{index + 1}
</div>
))}
</div>
<pre className="p-4 text-sm font-mono flex-1">
<code className="language-javascript">
{codeContent.split('\n').map((line, index) => (
<div key={index} className="text-gray-300">
{line}
</div>
))}
</code>
</pre>
</div>
</div>
{/* Terminal */}
<div className="h-48 bg-[#13131b] border-t border-gray-800 overflow-auto">
<div className="flex items-center p-2 border-b border-gray-800">
<div className="flex space-x-2">
<Button variant="ghost" size="sm" className="text-xs text-white bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
TERMINAL
</Button>
<Button variant="ghost" size="sm" className="text-xs text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
PROBLEMS
</Button>
<Button variant="ghost" size="sm" className="text-xs text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
OUTPUT
</Button>
<Button variant="ghost" size="sm" className="text-xs text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
DEBUG CONSOLE
</Button>
</div>
</div>
<div className="p-3 font-mono text-sm">
<div className="text-green-500">$ npm start</div>
<div className="text-gray-400">Starting development server...</div>
<div className="text-gray-400">Compiled successfully!</div>
<div className="text-gray-400">
You can now view databutton-ai in the browser.
</div>
<div className="text-gray-400">
Local:            http://localhost:3000
</div>
<div className="text-gray-400">
On Your Network:  http://192.168.1.5:3000
</div>
<div className="text-gray-400">
Note that the development build is not optimized.
</div>
<div className="text-gray-400">
To create a production build, use npm run build.
</div>
<div className="text-gray-400 mt-2">
webpack compiled successfully
</div>
<div className="text-white mt-2 flex items-center">
<span className="text-blue-400">databutton-ai</span>:<span className="text-purple-400">~</span>$ <span className="animate-pulse">|</span>
</div>
</div>
</div>
</div>
</div>
</div>
)}
<div className="p-8 max-w-7xl mx-auto">
<div className="flex justify-between items-center mb-8">
<div className="flex items-center">
<h1 className="text-3xl font-bold mr-3">Project Quantum</h1>
<Badge variant="outline" className="uppercase text-xs font-semibold bg-blue-500/10 text-blue-400 border-blue-500/20">
BETA
</Badge>
</div>
<div className="flex space-x-4">
<Button variant="outline" className="bg-[#161620] border-gray-700 text-gray-300 hover:bg-[#252530] hover:text-white !rounded-button whitespace-nowrap cursor-pointer">
<i className="fas fa-share-alt mr-2"></i>
Share
</Button>
<Button className="bg-blue-600 hover:bg-blue-700 text-white !rounded-button whitespace-nowrap cursor-pointer">
<i className="fas fa-rocket mr-2"></i>
Deploy
</Button>
</div>
</div>
<Tabs defaultValue="overview" className="mb-8">
<TabsList className="bg-[#161620] border border-gray-800">
<TabsTrigger value="overview" className="data-[state=active]:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer" onClick={() => setActiveTab('overview')}>Overview</TabsTrigger>
<TabsTrigger value="database" className="data-[state=active]:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer" onClick={() => setActiveTab('database')}>Database</TabsTrigger>
<TabsTrigger value="api" className="data-[state=active]:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer" onClick={() => setActiveTab('api')}>API</TabsTrigger>
<TabsTrigger value="language" className="data-[state=active]:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer" onClick={() => setActiveTab('language')}>AI Models</TabsTrigger>
<TabsTrigger value="settings" className="data-[state=active]:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer" onClick={() => setActiveTab('settings')}>Settings</TabsTrigger>
</TabsList>
<TabsContent value="overview" className="mt-6">
<div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
<Card className="bg-gradient-to-br from-[#1a1a25] to-[#161620] border-gray-800 overflow-hidden">
<CardContent className="p-6">
<div className="flex justify-between items-start">
<div>
<p className="text-sm text-gray-400 mb-1">Total API Calls</p>
<h3 className="text-3xl font-bold">24,892</h3>
<p className="text-sm text-green-400 mt-2 flex items-center">
<i className="fas fa-arrow-up mr-1"></i>
12.5% from last month
</p>
</div>
<div className="h-12 w-12 rounded-full bg-blue-500/20 flex items-center justify-center">
<i className="fas fa-bolt text-blue-400 text-xl"></i>
</div>
</div>
</CardContent>
</Card>
<Card className="bg-gradient-to-br from-[#1a1a25] to-[#161620] border-gray-800 overflow-hidden">
<CardContent className="p-6">
<div className="flex justify-between items-start">
<div>
<p className="text-sm text-gray-400 mb-1">Active Users</p>
<h3 className="text-3xl font-bold">1,284</h3>
<p className="text-sm text-green-400 mt-2 flex items-center">
<i className="fas fa-arrow-up mr-1"></i>
8.2% from last month
</p>
</div>
<div className="h-12 w-12 rounded-full bg-purple-500/20 flex items-center justify-center">
<i className="fas fa-users text-purple-400 text-xl"></i>
</div>
</div>
</CardContent>
</Card>
<Card className="bg-gradient-to-br from-[#1a1a25] to-[#161620] border-gray-800 overflow-hidden">
<CardContent className="p-6">
<div className="flex justify-between items-start">
<div>
<p className="text-sm text-gray-400 mb-1">Response Time</p>
<h3 className="text-3xl font-bold">245ms</h3>
<p className="text-sm text-red-400 mt-2 flex items-center">
<i className="fas fa-arrow-up mr-1"></i>
3.1% from last month
</p>
</div>
<div className="h-12 w-12 rounded-full bg-green-500/20 flex items-center justify-center">
<i className="fas fa-tachometer-alt text-green-400 text-xl"></i>
</div>
</div>
</CardContent>
</Card>
</div>
<Card className="bg-[#161620] border-gray-800 mb-8">
<CardHeader>
<CardTitle>Welcome to your project</CardTitle>
<CardDescription className="text-gray-400">
Your project has been deployed and is ready to use. Here's how to get started.
</CardDescription>
</CardHeader>
<CardContent>
<div className="grid grid-cols-1 md:grid-cols-2 gap-8">
<div>
<h3 className="text-xl font-semibold mb-4">Get started with your database</h3>
<p className="text-gray-400 mb-6">
Start building your application by creating tables and adding data. Our Table Editor makes PostgreSQL as easy to use as a spreadsheet, but if you need more, we also have an SQL Editor.
</p>
<div className="flex space-x-3">
<Button variant="outline" className="bg-[#1a1a25] border-gray-700 hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
<i className="fas fa-table mr-2"></i>
Table Editor
</Button>
<Button variant="outline" className="bg-[#1a1a25] border-gray-700 hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
<i className="fas fa-code mr-2"></i>
SQL Editor
</Button>
<Button variant="outline" className="bg-[#1a1a25] border-gray-700 hover:bg-[#252530] !rounded-button whitespace-nowrap cursor-pointer">
<i className="fas fa-info-circle mr-2"></i>
Learn More
</Button>
</div>
</div>
<div className="bg-[#13131b] rounded-lg border border-gray-800 overflow-hidden">
<div className="flex justify-between items-center p-2 bg-[#1a1a25] border-b border-gray-800">
<div className="text-xs text-gray-400">todo.sql</div>
<div className="flex space-x-2">
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-copy text-xs"></i>
</Button>
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-download text-xs"></i>
</Button>
</div>
</div>
<div className="p-4 text-sm font-mono">
<div className="flex">
<span className="text-gray-500 w-6 text-right mr-4">1</span>
<span className="text-blue-400">create table</span>
<span className="text-gray-300 ml-1">todo (</span>
</div>
<div className="flex">
<span className="text-gray-500 w-6 text-right mr-4">2</span>
<span className="text-gray-300 ml-4">id</span>
<span className="text-blue-400 ml-1">bigint</span>
<span className="text-blue-400 ml-1">generated</span>
<span className="text-gray-300 ml-1">by default as identity,</span>
</div>
<div className="flex">
<span className="text-gray-500 w-6 text-right mr-4">3</span>
<span className="text-gray-300 ml-4">task</span>
<span className="text-blue-400 ml-1">text</span>
<span className="text-gray-300 ml-1">,</span>
</div>
<div className="flex">
<span className="text-gray-500 w-6 text-right mr-4">4</span>
<span className="text-gray-300 ml-4">status</span>
<span className="text-blue-400 ml-1">status_type</span>
<span className="text-gray-300 ml-1">,</span>
</div>
<div className="flex">
<span className="text-gray-500 w-6 text-right mr-4">5</span>
<span className="text-gray-300 ml-4">user_id</span>
<span className="text-blue-400 ml-1">uuid</span>
<span className="text-blue-400 ml-1">references</span>
<span className="text-gray-300 ml-1">auth.users,</span>
</div>
<div className="flex">
<span className="text-gray-500 w-6 text-right mr-4">6</span>
<span className="text-gray-300 ml-4">inserted_at</span>
<span className="text-blue-400 ml-1">timestamp</span>
<span className="text-gray-300 ml-1">,</span>
</div>
<div className="flex">
<span className="text-gray-500 w-6 text-right mr-4">7</span>
<span className="text-gray-300 ml-4">updated_at</span>
<span className="text-blue-400 ml-1">timestamp</span>
</div>
<div className="flex">
<span className="text-gray-500 w-6 text-right mr-4">8</span>
<span className="text-gray-300">);</span>
</div>
</div>
</div>
</div>
</CardContent>
</Card>
<div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
<div className="col-span-2">
<h2 className="text-xl font-semibold mb-4">API Usage Statistics</h2>
<Card className="bg-[#161620] border-gray-800 h-[300px]">
<CardContent className="p-4">
<div ref={chartRef} className="w-full h-full"></div>
</CardContent>
</Card>
</div>
<div>
<h2 className="text-xl font-semibold mb-4">Quick Access</h2>
<Card className="bg-[#161620] border-gray-800">
<CardContent className="p-4">
<div className="space-y-3">
<div className="flex items-center p-3 bg-[#1a1a25] rounded-md hover:bg-[#252530] transition-colors cursor-pointer">
<div className="w-10 h-10 rounded-md bg-gradient-to-br from-blue-500 to-blue-600 flex items-center justify-center mr-3">
<i className="fas fa-code text-white"></i>
</div>
<div>
<h3 className="text-sm font-medium">Code Editor</h3>
<p className="text-xs text-gray-400">Edit project code</p>
</div>
</div>
<div className="flex items-center p-3 bg-[#1a1a25] rounded-md hover:bg-[#252530] transition-colors cursor-pointer">
<div className="w-10 h-10 rounded-md bg-gradient-to-br from-purple-500 to-purple-600 flex items-center justify-center mr-3">
<i className="fas fa-database text-white"></i>
</div>
<div>
<h3 className="text-sm font-medium">Database</h3>
<p className="text-xs text-gray-400">Manage your data</p>
</div>
</div>
<div className="flex items-center p-3 bg-[#1a1a25] rounded-md hover:bg-[#252530] transition-colors cursor-pointer">
<div className="w-10 h-10 rounded-md bg-gradient-to-br from-green-500 to-green-600 flex items-center justify-center mr-3">
<i className="fas fa-robot text-white"></i>
</div>
<div>
<h3 className="text-sm font-medium">AI Assistant</h3>
<p className="text-xs text-gray-400">Generate code with AI</p>
</div>
</div>
<div className="flex items-center p-3 bg-[#1a1a25] rounded-md hover:bg-[#252530] transition-colors cursor-pointer">
<div className="w-10 h-10 rounded-md bg-gradient-to-br from-orange-500 to-orange-600 flex items-center justify-center mr-3">
<i className="fas fa-chart-line text-white"></i>
</div>
<div>
<h3 className="text-sm font-medium">Analytics</h3>
<p className="text-xs text-gray-400">View performance metrics</p>
</div>
</div>
</div>
</CardContent>
</Card>
</div>
</div>
<div className="mb-8">
<h2 className="text-xl font-semibold mb-4">Task Status</h2>
<Card className="bg-[#161620] border-gray-800">
<ScrollArea className="h-[300px]">
<Table>
<TableHeader className="bg-[#1a1a25]">
<TableRow className="border-gray-800">
<TableHead className="text-gray-400 w-12">ID</TableHead>
<TableHead className="text-gray-400">Task</TableHead>
<TableHead className="text-gray-400">Status</TableHead>
<TableHead className="text-gray-400">Assigned To</TableHead>
<TableHead className="text-gray-400">Due Date</TableHead>
</TableRow>
</TableHeader>
<TableBody>
<TableRow className="border-gray-800">
<TableCell className="text-gray-300">1</TableCell>
<TableCell className="text-gray-300">Create project structure</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 hover:bg-green-500/30 border-none !rounded-button whitespace-nowrap">
Completed
</Badge>
</TableCell>
<TableCell>
<div className="flex items-center">
<Avatar className="h-6 w-6 mr-2">
<AvatarImage src="https://public.readdy.ai/ai/img_res/dd88250672a8b873587ed66b9ef4add3.jpg" />
<AvatarFallback>JD</AvatarFallback>
</Avatar>
<span className="text-sm text-gray-300">John D.</span>
</div>
</TableCell>
<TableCell className="text-gray-300">09.04.2025</TableCell>
</TableRow>
<TableRow className="border-gray-800">
<TableCell className="text-gray-300">2</TableCell>
<TableCell className="text-gray-300">Review documentation</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 hover:bg-green-500/30 border-none !rounded-button whitespace-nowrap">
Completed
</Badge>
</TableCell>
<TableCell>
<div className="flex items-center">
<Avatar className="h-6 w-6 mr-2">
<AvatarImage src="https://public.readdy.ai/ai/img_res/f87ef12ae060528b2c5c2d7187831a60.jpg" />
<AvatarFallback>AS</AvatarFallback>
</Avatar>
<span className="text-sm text-gray-300">Alex S.</span>
</div>
</TableCell>
<TableCell className="text-gray-300">09.04.2025</TableCell>
</TableRow>
<TableRow className="border-gray-800">
<TableCell className="text-gray-300">3</TableCell>
<TableCell className="text-gray-300">Build application UI</TableCell>
<TableCell>
<Badge className="bg-blue-500/20 text-blue-400 hover:bg-blue-500/30 border-none !rounded-button whitespace-nowrap">
In Progress
</Badge>
</TableCell>
<TableCell>
<div className="flex items-center">
<Avatar className="h-6 w-6 mr-2">
<AvatarImage src="https://public.readdy.ai/ai/img_res/425565e2e0523568e0ca4c29a39f428f.jpg" />
<AvatarFallback>SL</AvatarFallback>
</Avatar>
<span className="text-sm text-gray-300">Sarah L.</span>
</div>
</TableCell>
<TableCell className="text-gray-300">15.04.2025</TableCell>
</TableRow>
<TableRow className="border-gray-800">
<TableCell className="text-gray-300">4</TableCell>
<TableCell className="text-gray-300">Connect to database</TableCell>
<TableCell>
<Badge className="bg-blue-500/20 text-blue-400 hover:bg-blue-500/30 border-none !rounded-button whitespace-nowrap">
In Progress
</Badge>
</TableCell>
<TableCell>
<div className="flex items-center">
<Avatar className="h-6 w-6 mr-2">
<AvatarImage src="https://public.readdy.ai/ai/img_res/a43d9a86f766499f106f64c337332c1f.jpg" />
<AvatarFallback>JD</AvatarFallback>
</Avatar>
<span className="text-sm text-gray-300">John D.</span>
</div>
</TableCell>
<TableCell className="text-gray-300">18.04.2025</TableCell>
</TableRow>
<TableRow className="border-gray-800">
<TableCell className="text-gray-300">5</TableCell>
<TableCell className="text-gray-300">Deploy project</TableCell>
<TableCell>
<Badge className="bg-gray-500/20 text-gray-400 hover:bg-gray-500/30 border-none !rounded-button whitespace-nowrap">
Not Started
</Badge>
</TableCell>
<TableCell>
<div className="flex items-center">
<Avatar className="h-6 w-6 mr-2">
<AvatarImage src="https://public.readdy.ai/ai/img_res/67163b14df3f900ad53de8bcfaf26b2e.jpg" />
<AvatarFallback>AS</AvatarFallback>
</Avatar>
<span className="text-sm text-gray-300">Alex S.</span>
</div>
</TableCell>
<TableCell className="text-gray-300">25.04.2025</TableCell>
</TableRow>
<TableRow className="border-gray-800">
<TableCell className="text-gray-300">6</TableCell>
<TableCell className="text-gray-300">Implement user authentication</TableCell>
<TableCell>
<Badge className="bg-gray-500/20 text-gray-400 hover:bg-gray-500/30 border-none !rounded-button whitespace-nowrap">
Not Started
</Badge>
</TableCell>
<TableCell>
<div className="flex items-center">
<Avatar className="h-6 w-6 mr-2">
<AvatarImage src="https://public.readdy.ai/ai/img_res/98ccfad585eff3839b3d66c48b8f4b75.jpg" />
<AvatarFallback>SL</AvatarFallback>
</Avatar>
<span className="text-sm text-gray-300">Sarah L.</span>
</div>
</TableCell>
<TableCell className="text-gray-300">30.04.2025</TableCell>
</TableRow>
</TableBody>
</Table>
</ScrollArea>
</Card>
</div>
<div>
<h2 className="text-xl font-semibold mb-4">AI Model Features</h2>
<div className="grid grid-cols-1 md:grid-cols-3 gap-6">
<Card className="bg-gradient-to-br from-[#1a1a25] to-[#161620] border-gray-800 hover:border-blue-500/30 transition-colors cursor-pointer">
<CardHeader className="pb-2">
<div className="w-10 h-10 rounded-md bg-blue-500/20 flex items-center justify-center mb-3">
<i className="fas fa-pen-fancy text-blue-400"></i>
</div>
<CardTitle className="text-lg">Text Generation</CardTitle>
</CardHeader>
<CardContent>
<p className="text-gray-400 text-sm">
Create creative and informative content using various language models.
</p>
</CardContent>
<CardFooter className="pt-0">
<Button variant="ghost" size="sm" className="text-blue-400 hover:text-blue-300 hover:bg-blue-500/10 p-0 !rounded-button whitespace-nowrap cursor-pointer">
Learn more <i className="fas fa-arrow-right ml-2"></i>
</Button>
</CardFooter>
</Card>
<Card className="bg-gradient-to-br from-[#1a1a25] to-[#161620] border-gray-800 hover:border-purple-500/30 transition-colors cursor-pointer">
<CardHeader className="pb-2">
<div className="w-10 h-10 rounded-md bg-purple-500/20 flex items-center justify-center mb-3">
<i className="fas fa-language text-purple-400"></i>
</div>
<CardTitle className="text-lg">Language Translation</CardTitle>
</CardHeader>
<CardContent>
<p className="text-gray-400 text-sm">
Translate text naturally and fluently between more than 50 languages.
</p>
</CardContent>
<CardFooter className="pt-0">
<Button variant="ghost" size="sm" className="text-purple-400 hover:text-purple-300 hover:bg-purple-500/10 p-0 !rounded-button whitespace-nowrap cursor-pointer">
Learn more <i className="fas fa-arrow-right ml-2"></i>
</Button>
</CardFooter>
</Card>
<Card className="bg-gradient-to-br from-[#1a1a25] to-[#161620] border-gray-800 hover:border-green-500/30 transition-colors cursor-pointer">
<CardHeader className="pb-2">
<div className="w-10 h-10 rounded-md bg-green-500/20 flex items-center justify-center mb-3">
<i className="fas fa-chart-pie text-green-400"></i>
</div>
<CardTitle className="text-lg">Text Analysis</CardTitle>
</CardHeader>
<CardContent>
<p className="text-gray-400 text-sm">
Perform sentiment analysis, keyword extraction, and content classification.
</p>
</CardContent>
<CardFooter className="pt-0">
<Button variant="ghost" size="sm" className="text-green-400 hover:text-green-300 hover:bg-green-500/10 p-0 !rounded-button whitespace-nowrap cursor-pointer">
Learn more <i className="fas fa-arrow-right ml-2"></i>
</Button>
</CardFooter>
</Card>
</div>
</div>
</TabsContent>
<TabsContent value="database">
<Card className="bg-[#161620] border-gray-800">
<CardHeader>
<CardTitle>Database Management</CardTitle>
<CardDescription className="text-gray-400">
Manage your database tables and run SQL queries.
</CardDescription>
</CardHeader>
<CardContent>
<p className="text-gray-400 mb-4">
Your database structure is protected with the strongest encryption algorithms (AES-256). Regular backups, no-logs policy, and data anonymization methods are used.
</p>
<div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-6">
<Card className="bg-[#1a1a25] border-gray-700">
<CardHeader className="pb-2">
<CardTitle className="text-lg">Tables</CardTitle>
</CardHeader>
<CardContent>
<ScrollArea className="h-[300px] pr-4">
<div className="space-y-2">
<div className="flex items-center justify-between p-2 bg-[#252530] rounded-md hover:bg-[#303045] transition-colors cursor-pointer">
<div className="flex items-center">
<i className="fas fa-table text-blue-400 mr-2"></i>
<span className="text-sm">users</span>
</div>
<Badge className="bg-blue-500/20 text-blue-400 border-none">15 rows</Badge>
</div>
<div className="flex items-center justify-between p-2 bg-[#252530] rounded-md hover:bg-[#303045] transition-colors cursor-pointer">
<div className="flex items-center">
<i className="fas fa-table text-blue-400 mr-2"></i>
<span className="text-sm">projects</span>
</div>
<Badge className="bg-blue-500/20 text-blue-400 border-none">8 rows</Badge>
</div>
<div className="flex items-center justify-between p-2 bg-[#252530] rounded-md hover:bg-[#303045] transition-colors cursor-pointer">
<div className="flex items-center">
<i className="fas fa-table text-blue-400 mr-2"></i>
<span className="text-sm">tasks</span>
</div>
<Badge className="bg-blue-500/20 text-blue-400 border-none">24 rows</Badge>
</div>
<div className="flex items-center justify-between p-2 bg-[#252530] rounded-md hover:bg-[#303045] transition-colors cursor-pointer">
<div className="flex items-center">
<i className="fas fa-table text-blue-400 mr-2"></i>
<span className="text-sm">comments</span>
</div>
<Badge className="bg-blue-500/20 text-blue-400 border-none">42 rows</Badge>
</div>
<div className="flex items-center justify-between p-2 bg-[#252530] rounded-md hover:bg-[#303045] transition-colors cursor-pointer">
<div className="flex items-center">
<i className="fas fa-table text-blue-400 mr-2"></i>
<span className="text-sm">files</span>
</div>
<Badge className="bg-blue-500/20 text-blue-400 border-none">17 rows</Badge>
</div>
<div className="flex items-center justify-between p-2 bg-[#252530] rounded-md hover:bg-[#303045] transition-colors cursor-pointer">
<div className="flex items-center">
<i className="fas fa-table text-blue-400 mr-2"></i>
<span className="text-sm">settings</span>
</div>
<Badge className="bg-blue-500/20 text-blue-400 border-none">5 rows</Badge>
</div>
</div>
</ScrollArea>
</CardContent>
</Card>
<div className="col-span-2">
<Card className="bg-[#1a1a25] border-gray-700">
<CardHeader className="pb-2">
<CardTitle className="text-lg">SQL Query</CardTitle>
</CardHeader>
<CardContent>
<div className="bg-[#13131b] border border-gray-700 rounded-md p-4 font-mono text-sm mb-4 h-[150px]">
<div className="text-gray-300">SELECT u.name, COUNT(t.id) as task_count</div>
<div className="text-gray-300">FROM users u</div>
<div className="text-gray-300">LEFT JOIN tasks t ON u.id = t.user_id</div>
<div className="text-gray-300">GROUP BY u.name</div>
<div className="text-gray-300">ORDER BY task_count DESC;</div>
</div>
<div className="flex justify-end">
<Button className="bg-blue-600 hover:bg-blue-700 text-white !rounded-button whitespace-nowrap cursor-pointer">
<i className="fas fa-play mr-2"></i>
Run Query
</Button>
</div>
</CardContent>
</Card>
<Card className="bg-[#1a1a25] border-gray-700 mt-4">
<CardHeader className="pb-2">
<CardTitle className="text-lg">Results</CardTitle>
</CardHeader>
<CardContent>
<Table>
<TableHeader className="bg-[#252530]">
<TableRow className="border-gray-700">
<TableHead className="text-gray-400">name</TableHead>
<TableHead className="text-gray-400">task_count</TableHead>
</TableRow>
</TableHeader>
<TableBody>
<TableRow className="border-gray-700">
<TableCell className="text-gray-300">John D.</TableCell>
<TableCell className="text-gray-300">8</TableCell>
</TableRow>
<TableRow className="border-gray-700">
<TableCell className="text-gray-300">Sarah L.</TableCell>
<TableCell className="text-gray-300">7</TableCell>
</TableRow>
<TableRow className="border-gray-700">
<TableCell className="text-gray-300">Alex S.</TableCell>
<TableCell className="text-gray-300">5</TableCell>
</TableRow>
<TableRow className="border-gray-700">
<TableCell className="text-gray-300">Emily R.</TableCell>
<TableCell className="text-gray-300">4</TableCell>
</TableRow>
</TableBody>
</Table>
</CardContent>
</Card>
</div>
</div>
</CardContent>
</Card>
</TabsContent>
<TabsContent value="api">
<Card className="bg-[#161620] border-gray-800">
<CardHeader>
<CardTitle>API Management</CardTitle>
<CardDescription className="text-gray-400">
Manage your API keys and monitor your endpoints.
</CardDescription>
</CardHeader>
<CardContent>
<div className="space-y-6">
<div>
<h3 className="text-sm font-medium mb-2">API Provider Selection</h3>
<Select value={selectedAPI} onValueChange={handleModelChange}>
<SelectTrigger className="w-full bg-[#1a1a25] border-gray-700">
<SelectValue placeholder="Select API provider" />
</SelectTrigger>
<SelectContent className="bg-[#1a1a25] border-gray-700">
<SelectItem value="openai">OpenAI</SelectItem>
<SelectItem value="anthropic">Anthropic</SelectItem>
<SelectItem value="mistral">Mistral AI</SelectItem>
<SelectItem value="llama">Meta AI (Llama)</SelectItem>
</SelectContent>
</Select>
</div>
<div>
<h3 className="text-sm font-medium mb-2">Model Selection</h3>
<Select value={selectedModel} onValueChange={setSelectedModel}>
<SelectTrigger className="w-full bg-[#1a1a25] border-gray-700">
<SelectValue placeholder="Select model" />
</SelectTrigger>
<SelectContent className="bg-[#1a1a25] border-gray-700">
{apiModels[selectedAPI as keyof typeof apiModels].map((model) => (
<SelectItem key={model} value={model}>{model}</SelectItem>
))}
</SelectContent>
</Select>
</div>
<div>
<h3 className="text-sm font-medium mb-2">API Key</h3>
<div className="relative">
<Input
type="password"
placeholder="Enter your API key"
className="bg-[#1a1a25] border-gray-700 pr-10"
value={apiKey}
onChange={(e) => setApiKey(e.target.value)}
/>
<Button
variant="ghost"
size="icon"
className="absolute right-1 top-1 h-8 w-8 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer"
onClick={() => {
const input = document.querySelector('input[type="password"]') as HTMLInputElement;
if (input) {
input.type = input.type === 'password' ? 'text' : 'password';
}
}}
>
<i className="fas fa-eye"></i>
</Button>
</div>
<p className="text-xs text-gray-400 mt-1">
Your API key is securely stored and only used for API requests.
</p>
</div>
<div className="flex justify-end">
<Button className="bg-blue-600 hover:bg-blue-700 text-white !rounded-button whitespace-nowrap cursor-pointer">
Save API Settings
</Button>
</div>
<div className="mt-8 border-t border-gray-800 pt-6">
<h3 className="text-lg font-medium mb-4">API Endpoints</h3>
<div className="bg-[#1a1a25] rounded-lg border border-gray-700 overflow-hidden">
<Table>
<TableHeader>
<TableRow className="border-gray-700">
<TableHead className="text-gray-400">Endpoint</TableHead>
<TableHead className="text-gray-400">Method</TableHead>
<TableHead className="text-gray-400">Description</TableHead>
<TableHead className="text-gray-400">Status</TableHead>
</TableRow>
</TableHeader>
<TableBody>
<TableRow className="border-gray-700">
<TableCell className="text-gray-300">/api/v1/generate</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 border-none">POST</Badge>
</TableCell>
<TableCell className="text-gray-300">Text generation</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 border-none">Active</Badge>
</TableCell>
</TableRow>
<TableRow className="border-gray-700">
<TableCell className="text-gray-300">/api/v1/translate</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 border-none">POST</Badge>
</TableCell>
<TableCell className="text-gray-300">Text translation</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 border-none">Active</Badge>
</TableCell>
</TableRow>
<TableRow className="border-gray-700">
<TableCell className="text-gray-300">/api/v1/analyze</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 border-none">POST</Badge>
</TableCell>
<TableCell className="text-gray-300">Text analysis</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 border-none">Active</Badge>
</TableCell>
</TableRow>
<TableRow className="border-gray-700">
<TableCell className="text-gray-300">/api/v1/models</TableCell>
<TableCell>
<Badge className="bg-blue-500/20 text-blue-400 border-none">GET</Badge>
</TableCell>
<TableCell className="text-gray-300">List available models</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 border-none">Active</Badge>
</TableCell>
</TableRow>
<TableRow className="border-gray-700">
<TableCell className="text-gray-300">/api/v1/usage</TableCell>
<TableCell>
<Badge className="bg-blue-500/20 text-blue-400 border-none">GET</Badge>
</TableCell>
<TableCell className="text-gray-300">Usage statistics</TableCell>
<TableCell>
<Badge className="bg-green-500/20 text-green-400 border-none">Active</Badge>
</TableCell>
</TableRow>
</TableBody>
</Table>
</div>
</div>
</div>
</CardContent>
</Card>
</TabsContent>
<TabsContent value="language">
<Card className="bg-[#161620] border-gray-800">
<CardHeader>
<CardTitle>AI Models</CardTitle>
<CardDescription className="text-gray-400">
Create and analyze content using text-based language models.
</CardDescription>
</CardHeader>
<CardContent>
<div className="space-y-6">
<div>
<h3 className="text-sm font-medium mb-2">Prompt</h3>
<Textarea
placeholder="Enter text..."
className="min-h-[120px] bg-[#1a1a25] border-gray-700"
value={prompt}
onChange={(e) => setPrompt(e.target.value)}
/>
</div>
<div className="flex justify-between items-center">
<div className="flex items-center space-x-4">
<Select defaultValue="en">
<SelectTrigger className="w-[120px] bg-[#1a1a25] border-gray-700">
<SelectValue placeholder="Select language" />
</SelectTrigger>
<SelectContent className="bg-[#1a1a25] border-gray-700">
<SelectItem value="en">English</SelectItem>
<SelectItem value="fr">French</SelectItem>
<SelectItem value="de">German</SelectItem>
<SelectItem value="es">Spanish</SelectItem>
<SelectItem value="it">Italian</SelectItem>
</SelectContent>
</Select>
<Select defaultValue="standard">
<SelectTrigger className="w-[150px] bg-[#1a1a25] border-gray-700">
<SelectValue placeholder="Select operation" />
</SelectTrigger>
<SelectContent className="bg-[#1a1a25] border-gray-700">
<SelectItem value="standard">Standard</SelectItem>
<SelectItem value="summarize">Summarize</SelectItem>
<SelectItem value="translate">Translate</SelectItem>
<SelectItem value="analyze">Analyze</SelectItem>
<SelectItem value="creative">Creative</SelectItem>
</SelectContent>
</Select>
</div>
<Button
className="bg-blue-600 hover:bg-blue-700 text-white !rounded-button whitespace-nowrap cursor-pointer"
disabled={isProcessing || !prompt || !apiKey}
onClick={() => {
setIsProcessing(true);
// Simulated API request
setTimeout(() => {
setResponse(`This is a sample response. A real API response would vary based on the selected model (${selectedModel}) and the entered prompt. When the API integration is complete, real responses will be displayed here.`);
setIsProcessing(false);
}, 1500);
}}
>
{isProcessing ? (
<>
<i className="fas fa-spinner fa-spin mr-2"></i>
Processing...
</>
) : (
<>
<i className="fas fa-play mr-2"></i>
Run
</>
)}
</Button>
</div>
{response && (
<div>
<h3 className="text-sm font-medium mb-2">Response</h3>
<div className="bg-[#1a1a25] border border-gray-700 rounded-md p-4 min-h-[120px]">
<p className="text-gray-300 whitespace-pre-wrap">{response}</p>
</div>
<div className="flex justify-end mt-2">
<Button
variant="outline"
size="sm"
className="bg-[#252530] border-gray-700 text-gray-300 hover:bg-[#303045] hover:text-white !rounded-button whitespace-nowrap cursor-pointer"
onClick={() => {
navigator.clipboard.writeText(response);
}}
>
<i className="fas fa-copy mr-2"></i>
Copy
</Button>
</div>
</div>
)}
<div className="mt-6 border-t border-gray-800 pt-6">
<h3 className="text-lg font-medium mb-4">Previous Operations</h3>
<div className="space-y-4">
<div className="bg-[#1a1a25] border border-gray-700 rounded-md p-4">
<div className="flex justify-between items-start mb-2">
<div>
<Badge className="bg-blue-500/20 text-blue-400 hover:bg-blue-500/30 border-none !rounded-button whitespace-nowrap">
Summarize
</Badge>
<span className="text-xs text-gray-400 ml-2">09.04.2025 - 14:32</span>
</div>
<Button
variant="ghost"
size="icon"
className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer"
>
<i className="fas fa-ellipsis-v"></i>
</Button>
</div>
<p className="text-sm text-gray-300 line-clamp-2">
A long article was summarized. The result was 3 paragraphs...
</p>
</div>
<div className="bg-[#1a1a25] border border-gray-700 rounded-md p-4">
<div className="flex justify-between items-start mb-2">
<div>
<Badge className="bg-green-500/20 text-green-400 hover:bg-green-500/30 border-none !rounded-button whitespace-nowrap">
Translate
</Badge>
<span className="text-xs text-gray-400 ml-2">09.04.2025 - 11:15</span>
</div>
<Button
variant="ghost"
size="icon"
className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer"
>
<i className="fas fa-ellipsis-v"></i>
</Button>
</div>
<p className="text-sm text-gray-300 line-clamp-2">
A technical document was translated from English to French...
</p>
</div>
<div className="bg-[#1a1a25] border border-gray-700 rounded-md p-4">
<div className="flex justify-between items-start mb-2">
<div>
<Badge className="bg-purple-500/20 text-purple-400 hover:bg-purple-500/30 border-none !rounded-button whitespace-nowrap">
Analyze
</Badge>
<span className="text-xs text-gray-400 ml-2">08.04.2025 - 16:45</span>
</div>
<Button
variant="ghost"
size="icon"
className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer"
>
<i className="fas fa-ellipsis-v"></i>
</Button>
</div>
<p className="text-sm text-gray-300 line-clamp-2">
Sentiment analysis of customer feedback was performed. Overall satisfaction rate was 78%...
</p>
</div>
</div>
</div>
</div>
</CardContent>
</Card>
</TabsContent>
<TabsContent value="settings">
<Card className="bg-[#161620] border-gray-800">
<CardHeader>
<CardTitle>Project Settings</CardTitle>
<CardDescription className="text-gray-400">
Configure your project settings and manage team members.
</CardDescription>
</CardHeader>
<CardContent>
<div className="grid grid-cols-1 md:grid-cols-2 gap-8">
<div>
<h3 className="text-lg font-medium mb-4">General Settings</h3>
<div className="space-y-4">
<div>
<label className="text-sm font-medium">Project Name</label>
<Input
className="mt-1 bg-[#1a1a25] border-gray-700"
defaultValue="Project Quantum"
/>
</div>
<div>
<label className="text-sm font-medium">Description</label>
<Textarea
className="mt-1 bg-[#1a1a25] border-gray-700"
defaultValue="AI-powered content creation and analysis platform."
/>
</div>
<div>
<label className="text-sm font-medium">Project URL</label>
<div className="flex mt-1">
<div className="bg-[#252530] text-gray-400 px-3 py-2 rounded-l-md border border-r-0 border-gray-700">
https://databutton.ai/
</div>
<Input
className="rounded-l-none bg-[#1a1a25] border-gray-700"
defaultValue="project-quantum"
/>
</div>
</div>
</div>
</div>
<div>
<h3 className="text-lg font-medium mb-4">Team Members</h3>
<div className="bg-[#1a1a25] rounded-lg border border-gray-700 overflow-hidden">
<Table>
<TableHeader>
<TableRow className="border-gray-700">
<TableHead className="text-gray-400">User</TableHead>
<TableHead className="text-gray-400">Role</TableHead>
<TableHead className="text-gray-400">Actions</TableHead>
</TableRow>
</TableHeader>
<TableBody>
<TableRow className="border-gray-700">
<TableCell>
<div className="flex items-center">
<Avatar className="h-6 w-6 mr-2">
<AvatarImage src="https://public.readdy.ai/ai/img_res/8c46a9e3551a9d16e621988ad66373b1.jpg" />
<AvatarFallback>JD</AvatarFallback>
</Avatar>
<span className="text-sm text-gray-300">John Doe</span>
</div>
</TableCell>
<TableCell>
<Badge className="bg-purple-500/20 text-purple-400 border-none">Admin</Badge>
</TableCell>
<TableCell>
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-ellipsis-v"></i>
</Button>
</TableCell>
</TableRow>
<TableRow className="border-gray-700">
<TableCell>
<div className="flex items-center">
<Avatar className="h-6 w-6 mr-2">
<AvatarImage src="https://public.readdy.ai/ai/img_res/f34fdc67bf2e03bcaa98a07d0688c45b.jpg" />
<AvatarFallback>AS</AvatarFallback>
</Avatar>
<span className="text-sm text-gray-300">Alex Smith</span>
</div>
</TableCell>
<TableCell>
<Badge className="bg-blue-500/20 text-blue-400 border-none">Editor</Badge>
</TableCell>
<TableCell>
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-ellipsis-v"></i>
</Button>
</TableCell>
</TableRow>
<TableRow className="border-gray-700">
<TableCell>
<div className="flex items-center">
<Avatar className="h-6 w-6 mr-2">
<AvatarImage src="https://public.readdy.ai/ai/img_res/19899872a41aed9af542e2f7dcfba258.jpg" />
<AvatarFallback>SL</AvatarFallback>
</Avatar>
<span className="text-sm text-gray-300">Sarah Lee</span>
</div>
</TableCell>
<TableCell>
<Badge className="bg-blue-500/20 text-blue-400 border-none">Editor</Badge>
</TableCell>
<TableCell>
<Button variant="ghost" size="icon" className="h-6 w-6 text-gray-400 hover:text-white hover:bg-[#252530] !rounded-button cursor-pointer">
<i className="fas fa-ellipsis-v"></i>
</Button>
</TableCell>
</TableRow>
</TableBody>
</Table>
</div>
<Button className="mt-4 bg-[#252530] hover:bg-[#303045] text-white !rounded-button whitespace-nowrap cursor-pointer">
<i className="fas fa-user-plus mr-2"></i>
Add Member
</Button>
</div>
</div>
<div className="mt-8 border-t border-gray-800 pt-6">
<h3 className="text-lg font-medium mb-4">Advanced Settings</h3>
<div className="grid grid-cols-1 md:grid-cols-2 gap-6">
<div>
<div className="flex justify-between items-center mb-4">
<div>
<h4 className="text-sm font-medium">Automatic Backup</h4>
<p className="text-xs text-gray-400">Automatically backup project data</p>
</div>
<div className="flex items-center h-6">
<input type="checkbox" id="auto-backup-project" className="h-4 w-4 rounded border-gray-700 bg-[#1a1a25] cursor-pointer" defaultChecked />
</div>
</div>
<div className="flex justify-between items-center mb-4">
<div>
<h4 className="text-sm font-medium">Error Reporting</h4>
<p className="text-xs text-gray-400">Send anonymous error reports</p>
</div>
<div className="flex items-center h-6">
<input type="checkbox" id="error-reporting" className="h-4 w-4 rounded border-gray-700 bg-[#1a1a25] cursor-pointer" defaultChecked />
</div>
</div>
</div>
<div>
<div className="flex justify-between items-center mb-4">
<div>
<h4 className="text-sm font-medium">API Access</h4>
<p className="text-xs text-gray-400">Enable external API access</p>
</div>
<div className="flex items-center h-6">
<input type="checkbox" id="api-access" className="h-4 w-4 rounded border-gray-700 bg-[#1a1a25] cursor-pointer" defaultChecked />
</div>
</div>
<div className="flex justify-between items-center mb-4">
<div>
<h4 className="text-sm font-medium">Developer Mode</h4>
<p className="text-xs text-gray-400">Enable advanced debugging tools</p>
</div>
<div className="flex items-center h-6">
<input type="checkbox" id="developer-mode" className="h-4 w-4 rounded border-gray-700 bg-[#1a1a25] cursor-pointer" />
</div>
</div>
</div>
</div>
</div>
<div className="flex justify-end space-x-4 mt-8">
<Button variant="outline" className="bg-[#1a1a25] border-gray-700 text-gray-300 hover:bg-[#252530] hover:text-white !rounded-button whitespace-nowrap cursor-pointer">
Cancel
</Button>
<Button className="bg-blue-600 hover:bg-blue-700 text-white !rounded-button whitespace-nowrap cursor-pointer">
Save Changes
</Button>
</div>
</CardContent>
</Card>
</TabsContent>
</Tabs>
</div>
</div>
</div>
</div>
);
};
export default App
